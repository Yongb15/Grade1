for 변수 in range(초기값, 조건식, 증감식) :
	반복 처리할 코드 1
	반복 처리할 코드 2
	반복 처리할 코드 3
	...

for문 사용 - 반복의 횟수나 범위를 미리 알고 있을 때 사용
	 ㄴ 시작 값과 종료 값 등으로 범위를 지정하고 범위 내에서 반복을 수행

range([start, ]stop[, step]) - start부터 step만큼씩 (증가/감소) stop전까지 범위를 지정하는 함수
stop - 1까지 실행

주의사항
1. strat와 stop에는 정수만 가능
2. start와 step은 생략 가능
	ex) range(5)의 의미는 0,1,2,3,4
	ex)range(5,10)의 의미는 5,6,7,8,9
3.  step은 0 이 될 수 없음.(생략시 1이라고 간주)
4,  stop은 생략될 수 없음.
5. i 는 '_'로 대체 가능

for _ in range(11) :
	hap += _;		// 선언이 안되어 있을 경우에는 hap에 어떤 값이 있어야 누적이 가능하지만 현재 hap 자체가 존재하지 않아 더할 것이 없어서 오류가 발생
print(hap);

while문 - 반복 횟수를 결정하기보다는 조건식이 참일 때 반복하는 방식

변수 = 시작값;

while 변수 < 끝값 :
	이 부분을 반복
	변수 = 변수 + 증가값

while문 : 

# if else문

'''
num = int(input("정수를 입력하세요 : "))

if num >= 0 :
    if num == 0 :
        print("0입니다.");
    else :
        print("양수입니다.");
else :
    print("음수입니다.");
'''

# elif문

'''
num = int(input("정수를 입력하세요 : "));

if num == 0 :
    print("0입니다.");
elif num > 0 :
    print("양수입니다.");
else :
    print("음수입니다.");
'''

#기본 for문

'''
for i in range(0, 3, 1) :
    print("%d : 안녕하세요 for 문을 공부 중입니다. ^^" % i);

for _ in range(3, 6, 1) :
    print("%d : 안녕하세요 for 문을 공부 중입니다. ^^" % _);
'''

# for문을 활용해 합계 구하기

'''
hap = 0;

for _ in range(11) :
    hap += _;
print(hap);
'''

# 홀수의 합계

'''
hap = 0;

for i in range(501, 1001, 2) :
    hap += i;
print("500과 1000 사이에 있는 홀수의 합계 : %d" %hap);
'''

# 7의 배수

'''
hap = 0;

for i in range(7, 101, 7) :
    hap += i;
print("7의 배수의 합 : ", hap);
'''

# 키보드로 입력한 값까지 합계 구하기

'''
hap = 0;
num = 0;

num = int(input("값을 입력하세요 : "));

for i in range(1, num+1, 1) :
    hap += i;

print("1에서 %d까지의 합계 : %d" % (num, hap));
'''





    

