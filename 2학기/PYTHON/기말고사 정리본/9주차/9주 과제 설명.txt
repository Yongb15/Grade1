# 9주 과제

# 6번 문제
# (1, 2, 3)이 선언되었다고 할 때,
# arr[1]과 arr[2]를 바꾼 list인 brr를 생성하기 위한 프로그램을 작성하라.
# (단, brr는 직접적인 숫자 입력 방식의 원소 할당불가)
'''
t_arr = (1, 2, 3);                      # 튜플로 선언
l_arr = list(t_arr);                    # 튜플은 값이 변하지 않으므로 리스트로 변환

temp = l_arr[1]                         # 그 후 교환
l_arr[1] = l_arr[2]
l_arr[2] = temp

print(l_arr)                            # 출력
'''

# 7번 문제
# 어느 교실 학생들의 수학 점수는 10, 9, 9, 6, 7, 6, 8, 9이다.
# 이 학생들이 어떤 점수를 받았는지 확인할 수 있는 프로그램을 작성하라.
# 힌트 : 중복된 숫자 제외
'''
score = {10, 9, 9, 6, 7, 6, 8, 9}      # 중복된 숫자를 제거하기 위해 세트를 사용

print(score)
'''

# 8번 문제
# 어느 식당의 메뉴와 가격은 돈가스 5,000원, 생선가스 5,500원, 우동 2,500원 초밥세트 9,000원이다.
# 이 메뉴들을 dictionary를 이용하여 작성해보고 각각의 메뉴와 가격을 순차적으로 출력하는 프로스램을 작성하여 보자
'''
menu = {"돈가스":5000, "생선가스":5500, "우동":2500, "초밥 세트":9000}       # dictionary로 생성

for i in menu :                                                              # for문으로 각각의 인덱스로 접근
    print("{}의 가격은? {}입니다.".format(i, menu[i]))                       # 출력
'''

# 9번 문제
# A회사에는 "회장1, 이사1, 영업1, 영업2, 생산1, 생산2"가 운영하였고
# B회사에는 "회장1, 사외이사1, 영업1, 홍보1"이 운영하였다.
# 둘이 합병을 한 후 필요없는(중복) 인력을 내보내라
'''
Ac = ["회장1", "이사1", "영업1", "영업2", "생산1", "생산2"]         # 리스트로 생성
Bc = ["회장1", "사외이사1", "영업1", "홍보1"]                       # 리스트로 생성

Cc = set(Ac + Bc)                                                   # 필요없는 중복을 없애기 위해 set로 변환

print(Cc)                                                           # 출력
'''

# 10번 문제
# 두 수를 입력받아 각각의 약수를 구하고 두수의 공약수를 구하는 프로그램을 작성하라
# 집합, for, if 사용
'''
f_num = int(input("첫 번째 수를 입력하세요! : "))
n_num = int(input("두 번째 수를 입력하세요! : "))

f_set = set()                                               # 첫 번째 약수
n_set = set()                                               # 두 번째 약수

for i in range(1, f_num+1) :
    if f_num % i == 0 :
        f_set.update([i, f_num])
print("첫 번째 수의 약수는 {}".format(sorted(f_set)))

for i in range(1, n_num+1) :
    if n_num % i == 0 :
        n_set.update([i, n_num])
print("두 번째 수의 약수는 {}".format(sorted(n_set)))

print("{}와 {}의 공약수는".format(f_num, n_num))
print("{}".format(sorted(f_set & n_set)))		   # and 연산자 사용
'''

# 11번 문제
# 아래에서 요구하는 회원가입 프로그램을 작성하시오.
# 프로그램을 실행하면 ‘1. 회원가입, 2. 프로그램 종료’를 출력하고 사용자에게 선택을 유도한다. 
# 사용자가 1을 입력하면 ‘회원가입’을 진행하고 2를 입력하면 프로그램을 종료한다. 
# 프로그램이 종료되면 전체 아이디와 비밀번호를 출력하다.
# 회원가입은 아이디와 비밀번호를 입력받아 딕셔너리에 저장한다.
# 이때 아이디는 key, 비밀번호는 value로 한다.
'''
membership = {}                                                 # 리스트 생성

while True :
    num = int(input("1. 회원가입, 2. 프로그램 종료 : "))        # 무한반복으로 2가 나올때까지 동작 

    if num == 1 :
        Id = input("아이디를 입력하세요. : ")
        Password = int(input("비밀번호를 입력하세요. : "))

        membership[Id] = Password                               # 빈 리스트에 키와 벨류를 넣음

    if num == 2 :                   
        print("-"*20)
        print("아이디 : 비밀번호")
        print("-"*20)

        for i in membership :                                   # membership의 값 출력 반
            print("{}       {}".format(i, membership[i]))
        print("-"*20)
        break
'''

# 12번 문제
# 수학시험 문제 및 정답이다.
# 튜플에 문제를 저장하고 사용자가 답을 입력하면 채점하는 프로그램을 만드시오.

quiz = (['3+2',5,3], ['5/2의 몫',2,5], ['10-2',8,3], ['1-(10/4의 나머지):',-1,5], ['4*2+(100)',108,3], ['3*7*1+2',23,5], ['12/3*7',28,3])
# 튜플은 어떠한 자료형이든 가질 수 있어서 리스트 형태로 문제와 답 값을 넣음
score = 0

for i in quiz :                                         # quiz안의 인덱스 수  만큼 반복
    print("문제 : {}".format(i[0]))                     # 문제는 i[0] 인덱스로 접근 가능
    
    dap = int(input("정답을 입력하세요. "))
    
    if dap == i[1] :                                    # 답은 i[1] 인덱스로 접근 가능
        score += i[2]                                   # 점수는 i[2] 인덱스로 접근 가능
print("총점은 {}입니다.".format(score))













